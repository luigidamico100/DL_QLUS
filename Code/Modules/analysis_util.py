#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 24 01:25:01 2021

@author: luigidamico
"""

import dataloader_utils as dataload_ut
import pandas as pd

#%%


def create_and_save_dataframe_train(out_path='../../Experiments/train_dataset.csv'):
    '''
    Create the dataframe containing information about all the train batch for all folds
    '''
    train_dict_info = {
        'bimbo_name': [],
        'classe': [],
        'paziente': [],
        'valore': [],
        'video_name': [],
        'processed_video_name': [],
        'fold': []
        }
    
    for fold_test in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]:
        dataloaders_dict, _ = dataload_ut.get_mat_dataloaders_v2(['BEST', 'RDS'], basePath=DATASET_PATH, num_workers=0, fold_test=fold_test,
                                                                                        batch_size=32, mode='random_frame_from_clip', replicate_minority_classes=False, replicate_all_classes=0,
                                                                                        target_value=False, both_indicies=True, get_information=True,
                                                                                        train_samples=True, val_samples=True, test_samples=True)
        
        for batch in dataloaders_dict['train']:
            train_dict_info['bimbo_name'] = train_dict_info['bimbo_name'] + batch[3]['bimbo_name']
            train_dict_info['classe'] = train_dict_info['classe'] + batch[3]['classe']
            train_dict_info['paziente'] = train_dict_info['paziente'] + batch[3]['paziente']
            train_dict_info['valore'] = train_dict_info['valore'] + batch[3]['valore']
            train_dict_info['video_name'] = train_dict_info['video_name'] + batch[3]['video_name']
            train_dict_info['processed_video_name'] = train_dict_info['processed_video_name'] + batch[3]['processed_video_name']
            train_dict_info['fold'] = train_dict_info['fold'] + [fold_test] * len(batch[0])
        
    dataframe_train = pd.DataFrame(train_dict_info)
    dataframe_train.to_csv(out_path)
    return dataframe_train


def create_and_save_dataframe_complete(dataframe_train, out_path='../../Experiments/complete_dataset.csv'):
    '''
    Create the dataframe containing all the videos information. 
    dataframe_train: dataframe generated by create_and_save_dataframe_train function
    '''
    dataframe_complete = dataframe_train.groupby(['bimbo_name', 'classe', 'video_name', 'processed_video_name'], as_index=False).sum()
    dataframe_complete.drop('fold', axis=1, inplace=True)
    dataframe_complete.to_csv(out_path)
    return dataframe_complete


def create_ospedale_column(dataset):
    ospedale_col = pd.Series(index=dataset.index, dtype=object)
    for idx in dataset.index:
        bimbo_name = dataset.loc[idx]['bimbo_name']
        if 'Buzzi' in bimbo_name:
            ospedale_col.loc[idx] = 'Milan'
        elif 'Firenze' in bimbo_name:
            ospedale_col.loc[idx] = 'Florence'
        else:
            ospedale_col.loc[idx] = 'Naples'
    return ospedale_col











